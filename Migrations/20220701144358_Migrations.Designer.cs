// <auto-generated />
using AS_OOP_RacingTeams.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AS_OOP_RacingTeams.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220701144358_Migrations")]
    partial class Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("jobs", (string)null);
                });

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Birth_year")
                        .HasColumnType("integer")
                        .HasColumnName("birth_year");

                    b.Property<int>("JobId")
                        .HasColumnType("integer")
                        .HasColumnName("job_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("persons", (string)null);
                });

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.SponsorShip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("sponsorShips", (string)null);
                });

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("integer")
                        .HasColumnName("cnpj");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("team_person", b =>
                {
                    b.Property<int>("person_id")
                        .HasColumnType("integer");

                    b.Property<int>("team_id")
                        .HasColumnType("integer");

                    b.HasKey("person_id", "team_id");

                    b.HasIndex("team_id");

                    b.ToTable("team_person");
                });

            modelBuilder.Entity("team_sponsor", b =>
                {
                    b.Property<int>("sponsor_id")
                        .HasColumnType("integer");

                    b.Property<int>("team_id")
                        .HasColumnType("integer");

                    b.HasKey("sponsor_id", "team_id");

                    b.HasIndex("team_id");

                    b.ToTable("team_sponsor");
                });

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.Person", b =>
                {
                    b.HasOne("AS_OOP_RacingTeams.Domain.Entities.Job", "Job")
                        .WithMany("Person")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("team_person", b =>
                {
                    b.HasOne("AS_OOP_RacingTeams.Domain.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_team_person_person_id");

                    b.HasOne("AS_OOP_RacingTeams.Domain.Entities.Team", null)
                        .WithMany()
                        .HasForeignKey("team_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_team_person_team_id");
                });

            modelBuilder.Entity("team_sponsor", b =>
                {
                    b.HasOne("AS_OOP_RacingTeams.Domain.Entities.SponsorShip", null)
                        .WithMany()
                        .HasForeignKey("sponsor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_team_sponsor_sponsor_id");

                    b.HasOne("AS_OOP_RacingTeams.Domain.Entities.Team", null)
                        .WithMany()
                        .HasForeignKey("team_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_team_sponsor_team_id");
                });

            modelBuilder.Entity("AS_OOP_RacingTeams.Domain.Entities.Job", b =>
                {
                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
